


#端口配置
server.port=8888

## Dubbo 服务提供者配置

#元数据设置最好放到最上面防止出错 我也不知道为什么 放到下面一直报错会自己去找127.0.0.1:2181
# 移到上面就好了然后再放下去也不会报错可能是缓存缘故吧
dubbo.metadata-report.address=zookeeper://47.100.58.201:2181,47.100.58.201:2182
#这个要加上去 不加会报错 也没有看是什么错
spring.main.allow-bean-definition-overriding=true

#关闭注册中心的启动时检查，注册服务时失败不会报错
#dubbo.registry.check=false
#设置集群容错模式 Failover 失败自动重连默认两次不算第一次 Failfast 快速失败立即报错只调用一次 用于非幂等性操作(结果重复性不大)
#Failsafe 安全失败，不报异常直接忽略 Failback 失败自动恢复，后台记录失败请求定时重发 用于消息通知之类的操作
#Forking 并行调用多个服务器 成功一个就返回用于实时性要求较高的操作 需要浪费较多的服务器资源设置forks设置最大并行数 (未找到该设置forks的)
#dubbo.provider.cluster="failsafe"
#失败自动重连次数
#dubbo.provider.retries=2

#负载均衡 Random  随机，按权重设置随机概率。 RoundRobin  轮询，按公约后的权重设置轮询比率。
#LeastActive  最少活跃调用数，相同活跃数的随机，活跃数指调用前后计数差。使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。
#ConsistentHash 一致性 Hash，相同参数的请求总是发到同一提供者。当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动。
#dubbo.provider.loadbalance=roundrobin


#线程模型：派发策略
#all 所有消息都派发到线程池，包括请求、响应、连接事件、断开时间、心跳等
#direct 所有消息都不派发到线程池，全部在IO线程上直接执行
#message 只有请求响应消息派发到线程池，其他连接断开事件、心跳等消息直接在IO线程上执行
#execution 只有请求消息派发到线程池，不含响应，响应和其他链接断开事件、心跳等消息直接在IO线程上执行
#connection 在IO线程上，将连接断开事件放入队列，有序逐个执行，其他消息派发到线程池
dubbo.provider.dispatcher=all
#线程模型：线程池设置
#fixed 固定大小线程池，启动时建立线程，不关闭，一直持有(缺省)
#cached 缓存线程池，空闲一分钟自动删除，需要时重建
#limited 可伸缩线程池 但池中的线程只会增长不会收缩。只增长不收缩的目的是为了避免收缩时突然来了大流量引起的性能问题
#eager 优先创建Worker线程池。在任务数量大于corePoolSize但是小于maximumPoolSize时，优先创建Worker来处理任务。
     # 当任务数量大于maximumPoolSize时，将任务放入阻塞队列中。阻塞队列充满时抛出RejectedExecutionException(相比于cached:cached在任务数量超过maximumPoolSize时直接抛出异常而不是将任务放入阻塞队列)。
dubbo.protocol.threadpool=fixed

#禁止注册服务
#dubbo.registry.register=false

#注册中心表示为非动态管理模式 静态服务
#dubbo.registry.dynamic=false

# Dubbo 注册协议 与多协议  不同服务在性能上适用不同协议进行传输，比如大数据用短连接协议，小数据大并发用长连接协议
#单协议
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
# 多协议 不知道这样对不对 官方文档没有springboot版本 其他博客找不到
#dubbo.protocol.po1.name=dubbo
#dubbo.protocol.po1.port=20880
#dubbo.protocol.po2.name=rmi
#dubbo.protocol.po2.port=1099
#多协议暴露服务配置模式  全局
#dubbo.registry.protocol=dubbo,rmi

#默认启动的客户端
dubbo.registry.client=curator
# provider应用名称
spring.application.name=demo-provider


# Dubbo组件扫描的基础包
dubbo.scan.base-packages=com.dubbo.dudemoprovider.serviceImpl


#单注册中心路连接方式
#dubbo.registry.address=zookeeper://47.100.58.201:2182

## Dubbo 多注册中心注册 这里不一定要设置成registry1和2 名字可以自己定义  是这个定义注册中心的名字
dubbo.registries.registry1.address=zookeeper://47.100.58.201:2181
dubbo.registries.registry2.address=zookeeper://47.100.58.201:2182
#设置默认  其实这个不知道设置不设置 应该放上去没问题  因为设置默认之后应该就不用加配置也会将服务注册到这个注册中心里面了
dubbo.registries.registry2.default=true

#当一个接口有多种实现时，可以用grup区分
#请大佬讲解这俩有啥不一样  可以在这里设置完 通过service注解的group属性设置该服务在那个分组 个人觉得应该有一个是默认全部注册到这个分组有
#dubbo.registry.group=gp1
#dubbo.provider.group=gp2

#开启本地存根  或者应该填的是存根的路径
#dubbo.provider.stub=true

#延迟暴露 -1为初始化完成再暴露(缺省值) 1000为1秒
#dubbo.provider.delay=-1

#链接控制 限制服务器接收链接不超过十个 下面都可以
#dubbo.protocol.accepts=10
#dubbo.provider.accepts=10

#令牌验证 通过令牌验证在注册中心控制权限，以决定要不要下发令牌给消费者，
#        可以防止消费者绕过注册中心访问提供者，另外通过注册中心可灵活改变授权方式，而不需修改或升级提供者
#令牌验证可以细分为全局 服务 协议三个级别 协议级别的找不到该配置命令 有知道的大佬请留言 多协议也不知道如何设置
#dubbo.provider.token=true/随机字符自己设置

# 优雅停机 设置优雅停机超时时间，缺省超时时间是 10 秒，如果超时则强制关闭。  这个设置还管用么 已经没有提示和追中源了
dubbo.service.shutdown.wait=15000



#参数验证、泛化引用及实现、回声测试、查看上下文信息、消费服务方隐式传递参数、查看官方文档示例部分
#异步执行、异步调用、本地调用、参数回调、事件通知、路由规则、配置规则、服务降级、查看官方文档示例部分



